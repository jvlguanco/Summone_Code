namespace Core.Library;

public class PredictSets
{
    string program = "inter bloat ping pool comp tower";
    string global_dec = "inter pool bloat ping comp tower spawn";
    string global_var = "inter pool bloat ping";
    string gv_inter = "Identifier";
    string gv_inter_tail = "= [ ;";
    string g_inter_array_dec = "[";
    string g_inter_1d_tail = "= [ , ;";
    string g_inter_element = "Inter Literal";
    string g_add_inter_1d = ", }";
    string g_inter_2d_tail =  "= , ;";
    string g_add_inter_2d = ", }";
    string add_gv_inter_tail = ", ;";
    string add_gv_inter_val_tail = "= ;";
    string gv_inter_tail_add = ", ;";
    string gv_bloat = "Identifier";
    string gv_bloat_tail = "= [ ;";
    string g_bloat_array_dec = "[";
    string g_bloat_1d_tail = "= [ , ;";
    string g_bloat_element = "BloatLiteral";
    string g_add_bloat_1d = ", }";
    string g_bloat_2d_tail = "= , ;";
    string g_add_bloat_2d = ", }";
    string add_gv_bloat_tail = ", ;";
    string add_gv_bloat_val_tail = "= ;";
    string gv_bloat_tail_add = ", ;";
    string gv_ping = "Identifier";
    string g_ping_tail = "= [ ;";
    string g_ping_array_dec = "[";
    string g_ping_1d_tail = "= [ , ;";
    string g_ping_element = "PingLiteral";
    string g_add_ping_1d = ", }";
    string g_ping_2d_tail = "= , ;";
    string g_add_ping_2d = ", }";
    string add_gv_ping_tail = ", ;";
    string add_gv_ping_val_tail = "= ;";
    string gv_ping_tail_add = ", ;";
    string gv_pool = "Identifier";
    string g_pool_tail = "= [ ;";
    string g_pool_array_dec = "[";
    string g_pool_1d_tail = "= [ , ;";
    string g_pool_element = "PoolLiteral";
    string g_add_pool_1d = ", }";
    string g_pool_2d_tail = "= , ;";
    string g_add_pool_2d = ", }";
    string add_gv_pool_tail = ", ;";
    string add_gv_pool_val_tail = "= ;";
    string gv_pool_tail_add = ", ;";
    string global_comp = "comp";
    string gc_datatype = "inter bloat ping pool";
    string gc_inter_tail = "= [";
    string add_gc_inter_tail = ", ;";
    string add_gc_inter_val_tail = "=";
    string gc_inter_array_dec = "[";
    string gc_inter_1d_tail = "= [";
    string gc_inter_2d_tail = "=";
    string gc_bloat_tail = "= [";
    string add_gc_bloat_tail = ", ;";
    string add_gc_bloat_val_tail = "=";
    string gc_bloat_array_dec = "[";
    string gc_bloat_1d_tail = "= [";
    string gc_bloat_2d_tail = "=";
    string gc_ping_tail = "= [";
    string add_gc_ping_tail = ", ;";
    string add_gc_ping_val_tail = "=";
    string gc_ping_array_dec = "[";
    string gc_ping_1d_tail = "= [";
    string gc_ping_2d_tail = "=";
    string gc_pool_tail = "= [";
    string add_gc_pool_tail = ", ;";
    string add_gc_pool_val_tail = "=";
    string gc_pool_array_dec = "[";
    string gc_pool_1d_tail = "= [";
    string gc_pool_2d_tail = "=";
    string global_tower = "tower";
    string tower_var = "inter bloat ping pool";
    string add_tower_var = "inter bloat ping pool }";
    string gt_data_type = "inter bloat ping pool";

    string base_prod = "inter bloat ping pool comp tower Identifier for while do if push }";
    string local_dec = "inter bloat ping pool comp tower";
    string local_var = "inter bloat ping pool";
    string lv_inter = "Identifier";
    string lv_int_tail = "= [ , ;";
    string lv_inter_value = "( inter bloat InterLiteral BloatLiteral Identifier";
    string math_expression = "( inter bloat InterLiteral BloatLiteral Identifier";
    string math_operand = "( inter bloat InterLiteral BloatLiteral Identifier";
    string math_tail_expression = "+ - * / % ; } , ) ]";
    string math_operator = "+ - * / %";
    string inter_conversion_value = "PingLiteral ( inter bloat InterLiteral BloatLiteral Identifier hold";
    string value_type = "[ . ( + - * / % ; } , ) ] = && || ! > < >= <= inter bloat ping pool comp tower Identifier for while do if push destroy commit {";
    string index_value = "( inter bloat InterLiteral BloatLiteral Identifier";
    string d2_value_type = "[ + - * / % ; } , ) ] = && || ! > < >= <= inter bloat ping pool comp tower Identifier for while do if push destroy commit {";
    string argument = "Identifier inter bloat pool ping )";
    string literal_value = "InterLiteral BloatLiteral PingLiteral PoolLiteral";
    string additional_args = ", )";
    string builtin_func_call = "inter pool ping";
    string l_inter_array_dec = "[";
    string l_inter_1d_tail = "= [ , ;";
    string l_inter_element = "( inter bloat InterLiteral BloatLiteral Identifier";
    string l_add_inter_1d = ", }";
    string l_inter_2d_tail = "= , ;";
    string l_add_inter_2d = ", }";
    string add_lv_inter_tail = ", ;";
    string add_lv_inter_val_tail = "= ;";
    string lv_inter_tail_add = ", ;";
    string lv_bloat = "Identifier";
    string lv_bloat_tail = "= [ , ;";
    string lv_bloat_value = "( inter bloat InterLiteral BloatLiteral Identifier";
    string bloat_conversion_value = "PingLiteral ( inter bloat InterLiteral BloatLiteral Identifier hold";
    string bloat_array_dec = "[";
    string l_bloat_1d_tail = "= [ , ;";
    string l_bloat_element = "( inter bloat InterLiteral BloatLiteral Identifier";
    string l_add_bloat_1d = ", }";
    string l_bloat_2d_tail = "= , ;";
    string l_add_bloat_2d = ", }";
    string add_lv_bloat_tail = ", ;";
    string add_lv_bloat_val_tail = "= ;";
    string lv_bloat_tail_add = ", ;";
    string lv_ping = "Identifier";
    string lv_ping_tail = "= [ , ;";
    string add_lv_ping_val_tail = "= ;";
    string lv_ping_value = "ping hold Identifier PingLiteral InterLiteral BloatLiteral PoolLiteral";
    string ping_conversion_value = "Identifier PingLiteral InterLiteral BloatLiteral PoolLiteral";
    string string_concat = "Identifier PingLiteral";
    string string_value = "Identifier PingLiteral";
    string string_tail_concat = "+ , ; } )";
    string l_bloat_array_dec = "[";
    string l_ping_1d_tail = "= [ , ;";
    string l_ping_element = "ping hold Identifier PingLiteral";
    string l_add_ping_1d = ", }";
    string l_ping_2d_tail = "= , ;";
    string l_add_ping_2d = ", }";
    string add_lv_ping_tail = ", ;";
    string lv_ping_tail_add = ", ;";
    string lv_pool = "Identifier";
    string lv_pool_tail = "= [ , ;";
    string lv_pool_value = "( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping";
    string pool_conversion_value = "Identifier PoolLiteral PingLiteral hold";
    string pool_convert = "PingLiteral PoolLiteral";
    string general_expression = "( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping";
    string general_operand = "( ! inter bloat InterLiteral BloatLiteral PingLiteral PoolLiteral Identifier pool ping";
    string general_tail_expression = " + - * / % && || == != > < >= <=  ; } , ) inter bloat ping pool comp tower Identifier for while do if push destroy commit {";
    string general_operator = "+ - * / % Î» ( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping && || == != > < >= <=";
    string l_pool_array_dec = "[";
    string l_pool_element = "( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping";
    string l_pool_1D_tail = "[ , ;";
    string l_add_pool_1d = ", }";
    string l_pool_2d_tail = "= , ;";
    string l_add_pool_2d = ", }";
    string add_lv_pool_tail = ", ;";
    string add_lv_pool_val_tail = "= ;";
    string lv_pool_tail_add = ", ;";
    string local_comp = "comp";
    string lc_datatype = "inter bloat ping pool";
    string lc_inter_tail = "=";
    string add_lc_inter_tail = ", ;";
    string add_lc_inter_val_tail = "=";
    string lc_inter_array_dec = "[";
    string lc_inter_1d_tail = "= [";
    string lc_inter_2d_tail = "=";
    string lc_bloat_tail = "=";
    string add_lc_bloat_tail = ", ;";
    string add_lc_bloat_val_tail = "=";
    string lc_bloat_array_dec = "[";
    string lc_bloat_1d_tail = "= [";
    string lc_bloat_2d_tail = "=";
    string lc_ping_tail = "=";
    string add_lc_ping_tail = ", ;";
    string add_lc_ping_val_tail = "=";
    string lc_ping_array_dec = "[";
    string lc_ping_1d_tail = "= [";
    string lc_ping_2d_tail = "=";
    string lc_pool_tail = "=";
    string add_lc_pool_tail = ", ;";
    string add_lc_pool_val_tail = "=";
    string lc_pool_array_dec = "[";
    string lc_pool_1d_tail = "= [";
    string lc_pool_2d_tail = "=";
    string local_tower = "tower";
    string statement = "Identifier for while do if push recall";
    string stm_type = "[ . ; (";
    string assign_value_type = "[ . =";
    string assignment = "=";
    string assign_value = "hold ( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping {";
    string d1_2d_array = "( ! inter bloat InterLiteral BloatLiteral PingLiteral PoolLiteral Identifier pool ping";
    string assign_array_element = "( ! inter bloat InterLiteral BloatLiteral PingLiteral PoolLiteral Identifier pool ping";
    string add_assign_1d = ", }";
    string add_assign_2d = ", }";
    string loop_stm = "for while do";
    string init = "Identifier";
    string init_value = "Inter Literal Identifier";
    string for_keyword = "up down";
    string end = "Inter Literal Identifier";
    string content = "inter bloat ping pool comp tower Identifier for while do if push destroy commit }";
    string condition =  "( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping";
    string loop_terminator = "destroy commit";
    string cond_stm = "if";
    string body = "inter bloat ping pool comp tower Identifier for while do if push destroy commit {";
    string content_oneline = "destroy commit  inter bloat ping pool comp tower Identifier for while do if push";
    string else_clause = "else inter bloat ping pool comp tower Identifier for while do if push } destroy commit else recall";
    string push_value = "Identifier PingLiteral ping )";
    string recall_value = "( ! inter bloat InterLiteral BloatLiteral PingLiteral buff debuff Identifier pool ping";
    string user_function = "spawn";
    string spawn_tail = "inter bloat ping pool void";
    string spawn_data_type = "inter bloat ping pool void";
    string data_type = "inter bloat ping pool";
    string parameter = "inter bloat ping pool )";
    string optional_array = "[ Identifier";
    string D2_array = "] ,";
    string additional_param = ", )";
    string user_body = "inter bloat ping pool comp tower Identifier for while do if push recall }";

    public string GetPredictSet(int code)
    {
        switch (code)
        {
            case 2001: return program;
            case 2002: return global_dec;
            case 2003: return global_var;
            case 2004: return gv_inter;
            case 2005: return gv_inter_tail;
            case 2006: return g_inter_array_dec;
            case 2007: return g_inter_1d_tail;
            case 2008: return g_inter_element;
            case 2009: return g_add_inter_1d;
            case 2010: return g_inter_2d_tail;
            case 2011: return g_add_inter_2d;
            case 2012: return add_gv_inter_tail;
            case 2013: return add_gv_inter_val_tail;
            case 2014: return gv_inter_tail_add;
            case 2015: return gv_bloat;
            case 2016: return gv_bloat_tail;
            case 2017: return g_bloat_array_dec;
            case 2018: return g_bloat_1d_tail;
            case 2019: return g_bloat_element;
            case 2020: return g_add_bloat_1d;
            case 2021: return g_bloat_2d_tail;
            case 2022: return g_add_bloat_2d;
            case 2023: return add_gv_bloat_tail;
            case 2024: return add_gv_bloat_val_tail;
            case 2025: return gv_bloat_tail_add;
            case 2026: return gv_ping;
            case 2027: return g_ping_tail;
            case 2028: return g_ping_array_dec;
            case 2029: return g_ping_1d_tail;
            case 2030: return g_ping_element;
            case 2031: return g_add_ping_1d;
            case 2032: return g_ping_2d_tail;
            case 2033: return g_add_ping_2d;
            case 2034: return add_gv_ping_tail;
            case 2035: return add_gv_ping_val_tail;
            case 2036: return gv_ping_tail_add;
            case 2037: return gv_pool;
            case 2038: return g_pool_tail;
            case 2039: return g_pool_array_dec;
            case 2040: return g_pool_1d_tail;
            case 2041: return g_pool_element;
            case 2042: return g_add_pool_1d;
            case 2043: return g_pool_2d_tail;
            case 2044: return g_add_pool_2d;
            case 2045: return add_gv_pool_tail;
            case 2046: return add_gv_pool_val_tail;
            case 2047: return gv_pool_tail_add;
            case 2048: return global_comp;
            case 2049: return gc_datatype;
            case 2050: return gc_inter_tail;
            case 2051: return add_gc_inter_tail;
            case 2052: return add_gc_inter_val_tail;
            case 2053: return gc_inter_array_dec;
            case 2054: return gc_inter_1d_tail;
            case 2055: return gc_inter_2d_tail;
            case 2056: return gc_bloat_tail;
            case 2057: return add_gc_bloat_tail;
            case 2058: return add_gc_bloat_val_tail;
            case 2059: return gc_bloat_array_dec;
            case 2060: return gc_bloat_1d_tail;
            case 2061: return gc_bloat_2d_tail;
            case 2062: return gc_ping_tail;
            case 2063: return add_gc_ping_tail;
            case 2064: return add_gc_ping_val_tail;
            case 2065: return gc_ping_array_dec;
            case 2066: return gc_ping_1d_tail;
            case 2067: return gc_ping_2d_tail;
            case 2068: return gc_pool_tail;
            case 2069: return add_gc_pool_tail;
            case 2070: return add_gc_pool_val_tail;
            case 2071: return gc_pool_array_dec;
            case 2072: return gc_pool_1d_tail;
            case 2073: return gc_pool_2d_tail;
            case 2074: return global_tower;
            case 2075: return tower_var;
            case 2076: return add_tower_var;
            case 2077: return gt_data_type;
            case 2078: return base_prod;
            case 2079: return local_dec;
            case 2080: return local_var;
            case 2081: return lv_inter;
            case 2082: return lv_int_tail;
            case 2083: return lv_inter_value;
            case 2084: return math_expression;
            case 2085: return math_operand;
            case 2086: return math_tail_expression;
            case 2087: return math_operator;
            case 2088: return inter_conversion_value;
            case 2089: return value_type;
            case 2090: return index_value;
            case 2091: return d2_value_type;
            case 2092: return argument;
            case 2093: return literal_value;
            case 2094: return additional_args;
            case 2095: return builtin_func_call;
            case 2096: return l_inter_array_dec;
            case 2097: return l_inter_1d_tail;
            case 2098: return l_inter_element;
            case 2099: return l_add_inter_1d;
            case 2100: return l_inter_2d_tail;
            case 2101: return l_add_inter_2d;
            case 2102: return add_lv_inter_tail;
            case 2103: return add_lv_inter_val_tail;
            case 2104: return lv_inter_tail_add;
            case 2105: return lv_bloat;
            case 2106: return lv_bloat_tail;
            case 2107: return lv_bloat_value;
            case 2108: return bloat_conversion_value;
            case 2109: return bloat_array_dec;
            case 2110: return l_bloat_1d_tail;
            case 2111: return l_bloat_element;
            case 2112: return l_add_bloat_1d;
            case 2113: return l_bloat_2d_tail;
            case 2114: return l_add_bloat_2d;
            case 2115: return add_lv_bloat_tail;
            case 2116: return add_lv_bloat_val_tail;
            case 2117: return lv_bloat_tail_add;
            case 2118: return lv_ping;
            case 2119: return lv_ping_tail;
            case 2120: return lv_ping_value;
            case 2121: return ping_conversion_value;
            case 2122: return string_concat;
            case 2123: return string_value;
            case 2124: return string_tail_concat;
            case 2125: return l_bloat_array_dec;
            case 2126: return l_ping_1d_tail;
            case 2127: return l_ping_element;
            case 2128: return l_add_ping_1d;
            case 2129: return l_ping_2d_tail;
            case 2130: return l_add_ping_2d;
            case 2131: return add_lv_ping_tail;
            case 2132: return add_lv_ping_val_tail;
            case 2133: return lv_ping_tail_add;
            case 2134: return lv_pool;
            case 2135: return lv_pool_tail;
            case 2136: return lv_pool_value;
            case 2137: return pool_conversion_value;
            case 2138: return pool_convert;
            case 2139: return general_expression;
            case 2140: return general_operand;
            case 2141: return general_tail_expression;
            case 2142: return general_operator;
            case 2143: return l_pool_array_dec;
            case 2144: return l_pool_element;
            case 2145: return l_pool_1D_tail;
            case 2146: return l_add_pool_1d;
            case 2147: return l_pool_2d_tail;
            case 2148: return l_add_pool_2d;
            case 2149: return add_lv_pool_tail;
            case 2150: return add_lv_pool_val_tail;
            case 2151: return lv_pool_tail_add;
            case 2152: return local_comp;
            case 2153: return lc_datatype;
            case 2154: return lc_inter_tail;
            case 2155: return add_lc_inter_tail;
            case 2156: return add_lc_inter_val_tail;
            case 2157: return lc_inter_array_dec;
            case 2158: return lc_inter_1d_tail;
            case 2159: return lc_inter_2d_tail;
            case 2160: return lc_bloat_tail;
            case 2161: return add_lc_bloat_tail;
            case 2162: return add_lc_bloat_val_tail;
            case 2163: return lc_bloat_array_dec;
            case 2164: return lc_bloat_1d_tail;
            case 2165: return lc_bloat_2d_tail;
            case 2166: return lc_ping_tail;
            case 2167: return add_lc_ping_tail;
            case 2168: return add_lc_ping_val_tail;
            case 2169: return lc_ping_array_dec;
            case 2170: return lc_ping_1d_tail;
            case 2171: return lc_ping_2d_tail;
            case 2172: return lc_pool_tail;
            case 2173: return add_lc_pool_tail;
            case 2174: return add_lc_pool_val_tail;
            case 2175: return lc_pool_array_dec;
            case 2176: return lc_pool_1d_tail;
            case 2177: return lc_pool_2d_tail;
            case 2178: return local_tower;
            case 2179: return statement;
            case 2180: return stm_type;
            case 2181: return assign_value_type;
            case 2182: return assignment;
            case 2183: return assign_value;
            case 2184: return d1_2d_array;
            case 2185: return assign_array_element;
            case 2186: return add_assign_1d;
            case 2187: return add_assign_2d;
            case 2188: return loop_stm;
            case 2189: return init;
            case 2190: return init_value;
            case 2191: return for_keyword;
            case 2192: return end;
            case 2193: return content;
            case 2194: return condition;
            case 2195: return loop_terminator;
            case 2196: return cond_stm;
            case 2197: return body;
            case 2198: return content_oneline;
            case 2199: return else_clause;
            case 2200: return push_value;
            case 2201: return recall_value;
            case 2202: return user_function;
            case 2203: return spawn_tail;
            case 2204: return spawn_data_type;
            case 2205: return data_type;
            case 2206: return parameter;
            case 2207: return optional_array;
            case 2208: return D2_array;
            case 2209: return additional_param;
            case 2210: return user_body;

            default: return "";
        }
    }
}